// Package patterns provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package patterns

import (
	common "github.com/layer5io/schemas/models/core"
)

// Defines values for MesheryPatternCatalogDataClass.
const (
	Community MesheryPatternCatalogDataClass = "community"
	Official  MesheryPatternCatalogDataClass = "official"
	Project   MesheryPatternCatalogDataClass = "project"
	Verified  MesheryPatternCatalogDataClass = "verified"
)

// Defines values for MesheryPatternCatalogDataCompatibility.
const (
	Kubernetes MesheryPatternCatalogDataCompatibility = "kubernetes"
)

// Defines values for MesheryPatternCatalogDataType.
const (
	Deployment        MesheryPatternCatalogDataType = "Deployment"
	Observability     MesheryPatternCatalogDataType = "Observability"
	Resiliency        MesheryPatternCatalogDataType = "Resiliency"
	Scaling           MesheryPatternCatalogDataType = "Scaling"
	Security          MesheryPatternCatalogDataType = "Security"
	TrafficManagement MesheryPatternCatalogDataType = "Traffic-management"
	Troubleshooting   MesheryPatternCatalogDataType = "Troubleshooting"
	Workloads         MesheryPatternCatalogDataType = "Workloads"
)

// DeletePatternModel defines model for deletePatternModel.
type DeletePatternModel struct {
	ID   common.ID   `db:"id" json:"id"`
	Name common.Text `json:"name,omitempty"`
}

type CatalogData struct {
	// Class Published content belongs to one of the specified class denoting its support level.
	Class MesheryPatternCatalogDataClass `json:"class,omitempty"`

	// Compatibility One or more models associated with this catalog item. For designs, a list of one or more models implicated by components within the design. For models, this is self-referential.
	Compatibility []MesheryPatternCatalogDataCompatibility `json:"compatibility"`

	// PatternCaveats Specific stipulations to consider and known behaviors to be aware of when using this design.
	PatternCaveats string `json:"pattern_caveats"`

	// PatternInfo Purpose of the design along with its intended and unintended uses.
	PatternInfo string `json:"pattern_info"`

	// PublishedVersion Tracks the specific content version that has been made available in the Catalog.
	PublishedVersion string `json:"publishedVersion,omitempty"`

	// SnapshotURL Contains reference to the dark and light mode snapshots of the design.
	SnapshotURL []string `json:"snapshotURL,omitempty"`

	// Type Categorization of the type of design or operational flow depicted in this design.
	Type MesheryPatternCatalogDataType `json:"type"`
}

type Service struct {
	Annotations  map[string]string      `json:"annotations,omitempty"`
	ApiVersion   string                 `json:"apiVersion,omitempty"`
	DependsOn    []string               `json:"dependsOn,omitempty"`
	Id           *common.ID             `json:"id,omitempty"`
	IsAnnotation bool                   `json:"isAnnotation,omitempty"`
	Labels       map[string]string      `json:"labels,omitempty"`
	Model        string                 `json:"model,omitempty"`
	Name         string                 `json:"name,omitempty"`
	Namespace    string                 `json:"namespace,omitempty"`
	Settings     map[string]interface{} `json:"settings,omitempty"`
	Traits       map[string]interface{} `json:"traits,omitempty"`
	Type         string                 `json:"type,omitempty"`
	Version      string                 `json:"version,omitempty"`
}

type PatternFile struct {
	// Name Name of the design
	Name string `json:"name"`

	// SchemaVersion Specifies the version of the schema to which the design  conforms.
	SchemaVersion string `json:"schemaVersion,omitempty"`

	// Services Map of component IDs/names to their corresponding component declarations
	Services map[string]*Service `json:"services"`

	// Version Version of the design
	Version string `json:"version,omitempty"`
}

// MesheryPattern defines model for mesheryPattern.
type MesheryPattern struct {
	CatalogData CatalogData      `json:"catalog_data,omitempty"`
	CreatedAt   common.Time      `json:"created_at,omitempty"`
	ID          common.ID        `db:"id" json:"id"`
	Location    common.MapObject `json:"location,omitempty"`
	Name        common.Text      `json:"name,omitempty"`

	PatternFile PatternFile `json:"pattern_file,omitempty"`
	UpdatedAt   common.Time `json:"updated_at,omitempty"`
	UserID      common.ID   `db:"user_id" json:"user_id"`
	Visibility  common.Text `json:"visibility,omitempty"`
}

// MesheryPatternCatalogDataClass Published content belongs to one of the specified class denoting its support level.
type MesheryPatternCatalogDataClass string

// MesheryPatternCatalogDataCompatibility defines model for MesheryPattern.CatalogData.Compatibility.
type MesheryPatternCatalogDataCompatibility string

// MesheryPatternCatalogDataType Categorization of the type of design or operational flow depicted in this design.
type MesheryPatternCatalogDataType string

// MesheryPatternPage defines model for mesheryPatternPage.
type MesheryPatternPage struct {
	Page       int              `json:"page,omitempty"`
	PageSize   int              `json:"page_size,omitempty"`
	Patterns   []MesheryPattern `json:"patterns,omitempty"`
	ResultType string           `json:"resultType,omitempty"`
	TotalCount int              `json:"total_count,omitempty"`
}

// MesheryPatternResource defines model for mesheryPatternResource.
type MesheryPatternResource struct {
	CreatedAt common.Time `json:"created_at,omitempty"`
	Deleted   bool        `json:"deleted,omitempty"`
	ID        common.ID   `db:"id" json:"id"`
	Name      common.Text `json:"name,omitempty"`
	Namepace  common.Text `json:"namepace,omitempty"`
	OamType   common.Text `json:"oam_type,omitempty"`
	Type      common.Text `json:"type,omitempty"`
	UpdatedAt common.Time `json:"updated_at,omitempty"`
	UserID    common.ID   `db:"user_id" json:"user_id"`
}

// MesheryPatternResourcePage defines model for mesheryPatternResourcePage.
type MesheryPatternResourcePage struct {
	Page       int                      `json:"page,omitempty"`
	PageSize   int                      `json:"page_size,omitempty"`
	Resources  []MesheryPatternResource `json:"resources,omitempty"`
	ResultType string                   `json:"resultType,omitempty"`
	TotalCount int                      `json:"total_count,omitempty"`
}

// DesignShare defines model for designShare.
type DesignShare struct {
	ContentType string        `json:"content_type"`
	Emails      common.Emails `json:"emails"`
	ID          common.ID     `db:"id" json:"id"`
	Share       bool          `json:"share"`
}

// MesheryPatternDeleteRequestBody defines model for mesheryPatternDeleteRequestBody.
type MesheryPatternDeleteRequestBody struct {
	Patterns []DeletePatternModel `json:"patterns,omitempty"`
}

// MesheryPatternRequestBody defines model for mesheryPatternRequestBody.
type MesheryPatternRequestBody struct {
	Path        common.Text     `json:"path,omitempty"`
	PatternData MesheryPattern  `json:"pattern_data,omitempty"`
	Save        bool            `json:"save,omitempty"`
	Url         common.Endpoint `json:"url,omitempty"`
}
